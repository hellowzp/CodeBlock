#include <stdio.h>void test( int * m ){int t;scanf("%d",&t);*m = t;}main(){int m;test(&m);printf("m=%d",m);}答案补充 
*((int*)*(&t + 1)-1) = t; 从内层开始剖析：&t ：取变量t的地址(&t + 1) ：将变量t的地址以 变量t在内存中所占的大小为单位 增加一个单位*(&t + 1)：将变量t的地址以 变量t在内存中所占的大小为单位 增加一个单位 后的内存空间的值(int*)*(&t + 1)：将变量t的地址以 变量t在内存中所占的大小为单位 增加一个单位 后的内存空间的值 强制转换成整型指针的类型（int *）((int*)*(&t + 1)-1) ：将变量t的地址以 变量t在内存中所占的大小为单位 增加一个单位 后的内存空间的值 强制转换成整型指针的类型（int *）然后再使这个指针以整型占用的内存大小为单位 减少一个单位*((int*)*(&t + 1)-1) ：将变量t的地址以 变量t在内存中所占的大小为单位 增加一个单位 后的内存空间的值 强制转换成整型指针的类型（int *）然后再使这个指针以整型占用的内存大小为单位 减少一个单位 后所指向的内存单元的值。答案补充 
首先，不得不说*((int*)*(&t + 1)-1) = t;这个答案并不一定能让你的程序如愿输出在test函数运行时输入的数。也就是说这个答案是错误的评价：一般来说，这是一条没有实际意义的语句，除非整条语句最后所指向的的内存地址是m的地址。