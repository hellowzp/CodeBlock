#include "newroomdialog.h"
#include <QLineEdit>
#include <QHBoxLayout>
#include <QPushButton>
#include "gamehoster.h"
#include <QNetworkInterface>
#include "gameclient.h"
#include "gamehostdialog.h"

NewRoomDialog::NewRoomDialog(QWidget *parent) :
    QDialog(parent)
{

    QHBoxLayout *layout = new QHBoxLayout();
    this->setLayout(layout);

    _roomNameLineEdit = new QLineEdit();
    layout->addWidget(_roomNameLineEdit);

    _maxPlayerNumComboBox = new QComboBox();
    _maxPlayerNumComboBox->addItem("2", 2);
    _maxPlayerNumComboBox->addItem("4", 4);
    _maxPlayerNumComboBox->addItem("8", 8);
    _maxPlayerNumComboBox->addItem("16", 16);
    layout->addWidget(_maxPlayerNumComboBox);

    _mapComboBox = new QComboBox();
    _mapComboBox->addItem("map 1", 1);
    _mapComboBox->addItem("map 2", 2);
    _mapComboBox->addItem("map 3", 3);
    layout->addWidget(_mapComboBox);

    QPushButton *createButton = new QPushButton();
    createButton->setText("Create");
    QObject::connect(createButton, SIGNAL(clicked()), this, SLOT(CreateButtonCreated()));

    layout->addWidget(createButton);

}

void NewRoomDialog::setMyName(QString name)
{
    this->_myName = name;
}

void NewRoomDialog::setMainWindow(MainWindow *mainWindow)
{
    this->_mainWindow = mainWindow;
}

void NewRoomDialog::CreateButtonCreated()
{

    Room room;
    room.roomName = _roomNameLineEdit->text();
    room.maxPlayerNum = _maxPlayerNumComboBox->itemData(_maxPlayerNumComboBox->currentIndex()).toInt();
    room.map = _mapComboBox->itemData(_mapComboBox->currentIndex()).toInt();
    room.currentPlayerNum = 1;
    room.state = ROOM_STATE_IDLE;
    QNetworkInterface interface;
    for (QHostAddress address : interface.allAddresses()) {

        if (address.toIPv4Address() && address != QHostAddress::LocalHost) {
               room.senderAddress = address;
               break;
        }
    }

    Player player;
    player.id = 0;
    player.playerName = _myName;
    player.role = PLAYER_ROLE_MAGE;

    GameHoster::CreateHoster(room);
    GameClient::CreateClient(room, player);
    GameClient *client = GameClient::Instance();
    QObject::connect(client, SIGNAL(needToCreateWorld(int)), _mainWindow, SLOT(createWorld(int)));
    QObject::connect(_mainWindow, SIGNAL(worldCreated()), client, SLOT(worldCreated()));

    //create a host dialog and enable the start button
    GameHostDialog *dialog = new GameHostDialog(true);
    dialog->show();

    this->close();
}
